
//RobotBuilder Version: 2.0
//
//This file was generated by RobotBuilder. It contains sections of
//code that are automatically generated and assigned by robotbuilder.
//These sections will be updated in the future when you export to
//Java from RobotBuilder. Do not put any code or make any change in
//the blocks indicating autogenerated code or it will be lost on an
//update. Deleting the comments indicating the section will prevent
//it from being updated in the future.


package org.usfirst.frc2876.Steamworks2017.commands;
import org.usfirst.frc2876.Steamworks2017.Robot;
import org.usfirst.frc2876.Steamworks2017.RobotMap;

import edu.wpi.first.wpilibj.Relay.Value;
import edu.wpi.first.wpilibj.command.Command;


/**
*
*/
public class PixyAimToBoiler extends Command {
	
	boolean withinRange;
	int sightAttempts;

 // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

 // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

 // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
 public PixyAimToBoiler() {

 // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
     // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

     // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
     // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
     requires(Robot.driveTrain);

 // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
 }

 // Called just before this Command runs the first time
 protected void initialize() { 
 	RobotMap.driveTrainLightSpike.set(Value.kForward);
 	withinRange = false;
 	sightAttempts = 0;
 }

 // Called repeatedly when this Command is scheduled to run
 protected void execute() {
// 	Robot.driveTrain.myRobot.setLeftRightMotorOutputs(.3, -.3);
 	
 	try {
	    	//if(Robot.vision.packet1[0].X < 159)
			// New packet with pixy2 X value
		if(Robot.vision.packet2[0].X < 159)
	    		Robot.driveTrain.myRobot.setLeftRightMotorOutputs(-.3, -.3);
	    	//else if(Robot.vision.packet1[0].X > 161)
			// New packet with pixy2 X value
			else if(Robot.vision.packet2[0].X > 161)		
	    		Robot.driveTrain.myRobot.setLeftRightMotorOutputs(.3, .3);
	    	else
	    		withinRange = true;
	    	sightAttempts = 0;
 	} catch(NullPointerException e) {
 		sightAttempts++;
 		if(sightAttempts > 5)
 			withinRange = true;
 	}
 	
// 	timer++;
 }

 // Make this return true when this Command no longer needs to run execute()
 protected boolean isFinished() {
 	return withinRange;
 }

 // Called once after isFinished returns true
 protected void end() {
 	Robot.driveTrain.myRobot.setLeftRightMotorOutputs(0, 0);
 	RobotMap.driveTrainLightSpike.set(Value.kOff);
 }

 // Called when another command which requires one or more of the same
 // subsystems is scheduled to run
 protected void interrupted() {
 	end();
 }
}
